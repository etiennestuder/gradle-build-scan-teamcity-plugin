plugins {
    id 'nu.studer.plugindev' version '3.0'
    id 'com.gradle.plugin-publish' version '0.15.0'
    id 'org.nosphere.gradle.github.actions' version '1.2.0'
    id 'groovy'
}

group = 'nu.studer'
version = '1.2-DEV'

repositories {
    maven {
        // required for compileOnly dependency on build scan plugin API
        url 'https://plugins.gradle.org/m2/'
    }
}

configurations {
    gradleEnterprisePlugin
}

dependencies {
    gradleEnterprisePlugin 'com.gradle:gradle-enterprise-gradle-plugin:3.6.3'

    compileOnly 'com.gradle:gradle-enterprise-gradle-plugin:3.6.3'

    testImplementation 'io.ratpack:ratpack-groovy-test:1.8.2'
    testImplementation 'org.spockframework:spock-core:2.0-groovy-3.0'
}

test {
    useJUnitPlatform()
    environment('TEAMCITY_VERSION', '2020.2.2')
    jvmArgumentProviders.add(new PluginUnderTestCommandLineArgumentProvider(gradleEnterprisePlugin: configurations.gradleEnterprisePlugin))
}

gradlePlugin {
    plugins {
        pluginDevPlugin {
            id = 'nu.studer.build-scan.teamcity'
            implementationClass = 'nu.studer.gradle.buildscan.teamcity.TeamCityBuildScanPlugin'
        }
    }
}

pluginBundle {
    website = 'https://github.com/etiennestuder/gradle-build-scan-teamcity-plugin'
    vcsUrl = 'https://github.com/etiennestuder/gradle-build-scan-teamcity-plugin'
    description = 'Gradle plugin for build scans that notifies TeamCity when a build scan is published during a build.'
    tags = ['build scan', 'teamcity']

    plugins {
        pluginDevPlugin {
            displayName = 'gradle-build-scan-teamcity-plugin'
        }
    }

    mavenCoordinates {
        groupId = 'nu.studer'
        artifactId = 'gradle-build-scan-teamcity-plugin'
    }
}

final class PluginUnderTestCommandLineArgumentProvider implements CommandLineArgumentProvider {

    @Classpath
    FileCollection gradleEnterprisePlugin

    @Override
    Iterable<String> asArguments() {
        [
            "-DgradleEnterprisePluginClasspath=$gradleEnterprisePlugin.asPath"
        ]
    }

}
