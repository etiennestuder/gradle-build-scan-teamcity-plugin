plugins {
    id 'nu.studer.plugindev' version '2.0'
    id 'nu.studer.credentials' version '2.1'
    id 'org.nosphere.gradle.github.actions' version '1.2.0'
    id 'groovy'
}

group = 'nu.studer'
version = '1.2-DEV'

repositories {
    maven {
        // required for compileOnly dependency on build scan plugin API
        url 'https://plugins.gradle.org/m2/'
    }
}

configurations {
    gradleEnterprisePlugin
}

dependencies {
    gradleEnterprisePlugin 'com.gradle:gradle-enterprise-gradle-plugin:3.5.2'

    compileOnly 'com.gradle:gradle-enterprise-gradle-plugin:3.5.2'

    testImplementation 'io.ratpack:ratpack-groovy-test:1.8.2'
    testImplementation 'org.spockframework:spock-core:2.0-M4-groovy-2.5'
    testImplementation 'org.spockframework:spock-junit4:2.0-M4-groovy-2.5'
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

test {
    useJUnitPlatform()
    environment('TEAMCITY_VERSION', '2020.2.2')
    jvmArgumentProviders.add(new PluginUnderTestCommandLineArgumentProvider(gradleEnterprisePlugin: configurations.gradleEnterprisePlugin))
}

plugindev {
    pluginId = 'nu.studer.build-scan.teamcity'
    pluginDescription 'Gradle plugin for build scans that notifies TeamCity when a build scan is published during a build.'
    pluginImplementationClass 'nu.studer.gradle.buildscan.teamcity.TeamCityBuildScanPlugin'
    pluginLicenses 'Apache-2.0'
    pluginTags 'gradle', 'plugin', 'teamcity', 'build scan'
    authorId 'etiennestuder'
    authorName 'Etienne Studer'
    authorEmail 'etienne@studer.nu'
    projectUrl 'https://github.com/etiennestuder/gradle-build-scan-teamcity-plugin'
    projectInceptionYear '2019'
    done()
}

bintray {
    user = credentials.BINTRAY_USER
    key = credentials.BINTRAY_API_KEY
    pkg.repo = 'gradle-plugins'
    dryRun = false
}

final class PluginUnderTestCommandLineArgumentProvider implements CommandLineArgumentProvider {

    @Classpath
    FileCollection gradleEnterprisePlugin

    @Override
    Iterable<String> asArguments() {
        [
            "-DgradleEnterprisePluginClasspath=$gradleEnterprisePlugin.asPath"
        ]
    }

}
